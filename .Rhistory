main="RUV-2 (k=1)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,1,3,3,1,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=2)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=3)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1),
ylim=c(-0.6,0.5),
main="RUV-2 (k=3)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,2,1,2,1,4),
col=c(rep("BLUE",6),rep("RED",6)))
## RUV2 normalisation with k=2 ##########################
RUVArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
par(mfrow=c(1,1))
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=2)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
## Differential expression analysis #################
design_array <- model.matrix(~RUVArray$W+group_array)
fit <- eBayes(lmFit(useExp, design_array))
FDR_array <- topTable(fit, coef=4, number=Inf)
FDR_array <- cbind(infoExp[rownames(FDR_array),], FDR_array[,c(1,2,4,5)])
rownames(FDR_array) <- 1:nrow(FDR_array)
head(FDR_array)
## Adding ProbeID #############################
load("../Data/probe.rda")
FDR_array <- cbind(FDR_array[,1],
probe[match(FDR_array$ProbeID, probe$Array_Address_Id),c("Probe_Id")],
FDR_array[,-1])
colnames(FDR_array)[1:3] <- c("GeneName","ProbeID", "AddressID")
FDR_array$GeneName <- as.vector(FDR_array$GeneName)
FDR_array$GeneName[grep("Mar",FDR_array$GeneName)] <- paste("MARCH",substr(FDR_array$GeneName[grep("Mar",FDR_array$GeneName)],1,1),sep="")
FDR_array$GeneName[grep("Sep",FDR_array$GeneName)] <- paste("SEPT",substr(FDR_array$GeneName[grep("Sep",FDR_array$GeneName)],1,1),sep="")
getwd()
## Adding ProbeID #############################
load("../Data/probe.rda")
FDR_array <- cbind(FDR_array[,1],
probe[match(FDR_array$ProbeID, probe$Array_Address_Id),c("Probe_Id")],
FDR_array[,-1])
colnames(FDR_array)[1:3] <- c("GeneName","ProbeID", "AddressID")
FDR_array$GeneName <- as.vector(FDR_array$GeneName)
FDR_array$GeneName[grep("Mar",FDR_array$GeneName)] <- paste("MARCH",substr(FDR_array$GeneName[grep("Mar",FDR_array$GeneName)],1,1),sep="")
FDR_array$GeneName[grep("Sep",FDR_array$GeneName)] <- paste("SEPT",substr(FDR_array$GeneName[grep("Sep",FDR_array$GeneName)],1,1),sep="")
head(FDR_array)
## Adding GeneID ########################
arrayAnnot=read.csv("../Annot/HumanHT-12_V4_0_R2_15002873_B 2.csv")
conv=read.csv("../Annot/conv_refseq_ensembl.csv")
m=match(FDR_array$AddressID, arrayAnnot$Array_Address_Id)
FDR_array$TxID=arrayAnnot$TxID_noV[m]
m=match(FDR_array$TxID, conv$From)
FDR_array$GeneID <- conv$To[m]
FDR_array <- FDR_array[,c("GeneName","GeneID","TxID",
"ProbeID","AddressID",
"logFC","AveExpr","P.Value","adj.P.Val")]
FDR_array <- FDR_array[!is.na(FDR_array$GeneID),]
## save(FDR_array, file="Results/FDR_array.rda")
## load required packages ##################
library("limma")
library("ruv")
## micro-array data #######################
dataExp=read.csv("../Data/dataExpProbes.csv")
infoExp=dataExp[,c(1,2)]
useExp=dataExp[,-c(1,2)]
Samples_Array <-  c("C55F","C1078F","C1078T","C1541T","C1571F","C1571T","R1815F","R1815T","R4516F","R4516T","R4852F","R4852T")
Samples_array <- c("C1-F", "C2-F", "C2-T", "C3-T", "C4-F", "C4-T", "R1-F", "R1-T", "R2-F", "R2-T", "R3-F", "R3-T")
group_array <- c(rep("control", 6), rep("Rett", 6))
colnames(useExp) <- Samples_array
## Array Nuron Levels Plot ###########################
load("../Data/Astro_array.rda")
barplot(height=1-as.numeric(Astro_array[1,-1]),
names.arg=Samples_array,
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
## Array PC plots  ###########################
par(mfrow=c(2,2))
intUQ <- plotMDS(useExp, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1.2), ylim=c(-1.1,0.6),
main="UQ",dim.plot = c(1,2), pch=20)
text(intUQ$x, intUQ$y, Samples_array,
pos=c(1,1,1,1,3,1,3,3,1,2,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
fit <- eBayes(lmFit(useExp, model.matrix(~group_array)))
fp_array <- topTable(fit, coef=2, number=Inf)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
ctl <- !infoExp$TargetID%in%fp_array$TargetID[1:5000]
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=1)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=1)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,1,3,3,1,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=2)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=3)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1),
ylim=c(-0.6,0.5),
main="RUV-2 (k=3)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,2,1,2,1,4),
col=c(rep("BLUE",6),rep("RED",6)))
## RUV2 normalisation with k=2 ##########################
RUVArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
par(mfrow=c(1,1))
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=2)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
## Differential expression analysis #################
design_array <- model.matrix(~RUVArray$W+group_array)
fit <- eBayes(lmFit(useExp, design_array))
FDR_array <- topTable(fit, coef=4, number=Inf)
FDR_array <- cbind(infoExp[rownames(FDR_array),], FDR_array[,c(1,2,4,5)])
rownames(FDR_array) <- 1:nrow(FDR_array)
## Adding ProbeID #############################
load("../Data/probe.rda")
FDR_array <- cbind(FDR_array[,1],
probe[match(FDR_array$ProbeID, probe$Array_Address_Id),c("Probe_Id")],
FDR_array[,-1])
colnames(FDR_array)[1:3] <- c("GeneName","ProbeID", "AddressID")
FDR_array$GeneName <- as.vector(FDR_array$GeneName)
FDR_array$GeneName[grep("Mar",FDR_array$GeneName)] <- paste("MARCH",substr(FDR_array$GeneName[grep("Mar",FDR_array$GeneName)],1,1),sep="")
FDR_array$GeneName[grep("Sep",FDR_array$GeneName)] <- paste("SEPT",substr(FDR_array$GeneName[grep("Sep",FDR_array$GeneName)],1,1),sep="")
m=match(FDR_array$AddressID, arrayAnnot$Array_Address_Id)
FDR_array$TxID=arrayAnnot$TxID_noV[m]
m=match(FDR_array$TxID, conv$From)
FDR_array$GeneID <- conv$To[m]
head(FDR_array)
FDR_array <- FDR_array[,c("GeneName","GeneID","TxID",
"ProbeID","AddressID",
"logFC","AveExpr","P.Value","adj.P.Val")]
FDR_array <- FDR_array[!is.na(FDR_array$GeneID),]
save(FDR_array, file="../Results/FDR_array.rda")
load("/Volumes/Data0/PROJECTS/RettSyndromeTranscriptome/MANUSCRIPT/Scripts/Results/FDR_seq_cpm.rda")
ls()
head(FDR_seq_cpm)
## Load required packages ##########################################
library("edgeR")
library("RUVSeq")
## Load inputs/data #############################################
load("../Results/geneCounts.rda")
load("../Data/Astro_seq.rda")
load("../Annot/geneInfo.rda")
## Two versions of sample naming ###################################
Samples_Seq <- c("C1078", "C1541", "C1571", "R1815", "R4516", "R4852")
Samples_seq <- c("C2", "C3", "C4", "R1", "R2", "R3")
## Normalisation and Filtering ###########################################
geneRPKM <- rpkm(x = geneCounts$counts, gene.length = geneCounts$annotation$Length)
geneCPM <- cpm(geneCounts$counts)
head(geneCPM)
threshold = 0.5; nSamples = 3
filtered <- which(rowSums(geneRPKM > threshold) >= nSamples)
counts <- geneCounts$counts[filtered,]
RPKM <- geneRPKM[filtered,]
CPM <- geneCPM[filtered,]
colnames(counts) <- Samples_seq
colnames(RPKM) <- Samples_seq
colnames(CPM) <- Samples_seq
head(CPM)
## Load required packages ##########################################
library("edgeR")
library("RUVSeq")
load("../Results/geneCounts.rda")
load("../Data/Astro_seq.rda")
load("../Annot/geneInfo.rda")
Samples_Seq <- c("C1078", "C1541", "C1571", "R1815", "R4516", "R4852")
Samples_seq <- c("C2", "C3", "C4", "R1", "R2", "R3")
head(geneCounts)
load("../Results/geneCounts.rda")
load("../Data/Astro_seq.rda")
load("../Annot/geneInfo.rda")
Samples_Seq <- c("C1078", "C1541", "C1571", "R1815", "R4516", "R4852")
Samples_seq <- c("C2", "C3", "C4", "R1", "R2", "R3")
geneRPKM <- rpkm(x = geneCounts$counts, gene.length = geneCounts$annotation$Length)
geneCPM <- cpm(geneCounts$counts)
threshold = 0.5; nSamples = 3
filtered <- which(rowSums(geneRPKM > threshold) >= nSamples)
counts <- geneCounts$counts[filtered,]
RPKM <- geneRPKM[filtered,]
CPM <- geneCPM[filtered,]
colnames(counts) <- Samples_seq
colnames(RPKM) <- Samples_seq
colnames(CPM) <- Samples_seq
head(CPM)
# Marker lists
tork=read.csv("Torkamani.csv", head = T)
cahoy_ast=read.csv("Cahoy_S4_ast.csv", head = T)
cahoy_neu=read.csv("Cahoy_S6_neu.csv", head = T)
cahoy_oli=read.csv("Cahoy_S5_oli.csv", head = T)
RNASeq=read.csv("RNASeq.csv", head = T)
head(CPM)
head(geneInfo)
CPM <- cbind(rownames(CPM),
geneInfo$gene_name[match(rownames(CPM), geneInfo$gene_id)],
CPM)
head(CPM)
rm(list=ls())
## Load required packages ##########################################
library("edgeR")
library("RUVSeq")
#
# library(CellMix)
# library(BiocInstaller)
# library(GEOquery)
# library(affy)
# library(Biobase)
# library(betr)
# library(reshape)
## data #############################################
load("../Results/geneCounts.rda")
load("../Data/Astro_seq.rda")
load("../Annot/geneInfo.rda")
Samples_Seq <- c("C1078", "C1541", "C1571", "R1815", "R4516", "R4852")
Samples_seq <- c("C2", "C3", "C4", "R1", "R2", "R3")
geneRPKM <- rpkm(x = geneCounts$counts, gene.length = geneCounts$annotation$Length)
geneCPM <- cpm(geneCounts$counts)
threshold = 0.5; nSamples = 3
filtered <- which(rowSums(geneRPKM > threshold) >= nSamples)
counts <- geneCounts$counts[filtered,]
RPKM <- geneRPKM[filtered,]
CPM <- geneCPM[filtered,]
colnames(counts) <- Samples_seq
colnames(RPKM) <- Samples_seq
colnames(CPM) <- Samples_seq
CPM<-data.frame(CPM)
CPM <- cbind(rownames(CPM),
geneInfo$gene_name[match(rownames(CPM), geneInfo$gene_id)],
CPM)
head(CPM)
rownames(CPM) <- 1:nrow(CPM)
colnames(CPM)[1:2]<-c("geneID","geneNames")
head(CPM)
tork=read.csv("Torkamani.csv", head = T)
cahoy_ast=read.csv("Cahoy_S4_ast.csv", head = T)
cahoy_neu=read.csv("Cahoy_S6_neu.csv", head = T)
cahoy_oli=read.csv("Cahoy_S5_oli.csv", head = T)
RNASeq=read.csv("RNASeq.csv", head = T)
getwd()
tork=read.csv("../Data/Torkamani.csv", head = T)
cahoy_ast=read.csv("../Data/Cahoy_S4_ast.csv", head = T)
cahoy_neu=read.csv("../Data/Cahoy_S6_neu.csv", head = T)
cahoy_oli=read.csv("../Data/Cahoy_S5_oli.csv", head = T)
RNASeq=read.csv("../Data/RNASeq.csv", head = T)
head(tork)
head(cahoy_ast)
head(RNASeq)
help("read.csv")
tork=read.csv("../Data/Torkamani.csv", header = T)
cahoy_ast=read.csv("../Data/Cahoy_S4_ast.csv", header = T)
cahoy_neu=read.csv("../Data/Cahoy_S6_neu.csv", header = T)
cahoy_oli=read.csv("../Data/Cahoy_S5_oli.csv", header = T)
RNASeq=read.csv("../Data/RNASeq.csv", header = T)
head(CPM)
head(tork)
tork_ast=toupper(tork$Astrocytes[!tork$Astrocytes==""])
tork_neu=toupper(tork$Neurons[!tork$Neurons==""])
tork_oli=toupper(tork$Oligodendrocytes[!tork$Oligodendrocytes==""])
head(cahoy_ast)
toupper(Gfap)
toupper("Gfap")
asts <- toupper(cahoy_ast$Gene.Name)
neus <- toupper(cahoy_neu$Gene.Name)
common <- intersect(asts,neus)
asts <- unique(setdiff(asts,common))
neus <- unique(setdiff(neus,common))
txtdesc <- function(x) textConnection(paste(x, collapse="\n"))
ML_cahoy=MarkerList(file=txtdesc(c(	paste(asts,"Astrocytes"),paste(neus,"Neurons"))))
library(CellMix)
ML_cahoy=MarkerList(file=txtdesc(c(	paste(asts,"Astrocytes"),paste(neus,"Neurons"))))
dec_cahoy=ged(expres,ML_cahoy,"ssKL")
dec_cahoy_ssKL <- dec_cahoy@fit@H
dec_cahoy1=ged(exprs,ML_cahoy,"DSA")
dec_cahoy2=ged(exprs,ML_cahoy,"deconf")
dec_cahoy=ged(CPM,ML_cahoy,"ssKL")
dec_cahoy_ssKL <- dec_cahoy@fit@H
dec_cahoy1=ged(CPM,ML_cahoy,"DSA")
dec_cahoy2=ged(CPM,ML_cahoy,"deconf")
ged
help("ged")
dec_cahoy=ged(CPM,ML_cahoy,"ssKL")
dec_cahoy_ssKL <- dec_cahoy@fit@H
dec_cahoy1=ged(CPM,ML_cahoy,"DSA")
dec_cahoy2=ged(CPM,ML_cahoy,"deconf")
head(CPM)
## Load required packages ##########################################
library(CellMix)
## Part I: Micro-array Data
## Load required packages ##########################################
library(CellMix)
## micro-array data #######################
dataExp=read.csv("../Data/dataExpProbes.csv")
infoExp=dataExp[,c(1,2)]
useExp=dataExp[,-c(1,2)]
Samples_Array <-  c("C55F","C1078F","C1078T","C1541T","C1571F","C1571T","R1815F","R1815T","R4516F","R4516T","R4852F","R4852T")
Samples_array <- c("C1-F", "C2-F", "C2-T", "C3-T", "C4-F", "C4-T", "R1-F", "R1-T", "R2-F", "R2-T", "R3-F", "R3-T")
group_array <- c(rep("control", 6), rep("Rett", 6))
colnames(useExp) <- Samples_array
head(useExp)
arrayAnnot=read.csv("../Annot/HumanHT-12_V4_0_R2_15002873_B 2.csv")
head(arrayAnnot)
head(useExp)
head(infoExp)
arrayAnnot=read.csv("../Annot/HumanHT-12_V4_0_R2_15002873_B 2.csv")
conv=read.csv("../Annot/conv_refseq_ensembl.csv")
head(conv)
head(infoExp)
dataExp=read.csv("../Data/dataExpProbes.csv")
infoExp=dataExp[,c(1,2)]
useExp=dataExp[,-c(1,2)]
head(dataExp)
lenght(dataExp$TargetID)
length(dataExp$TargetID)
length(unique(dataExp$TargetID))
rownames(dataExp)<-dataExp$TargetID
dataExp=read.csv("../Data/dataExpProbes.csv")
head(dataExp)
help("aggregate")
dataExp <- aggregate(dataExp[,-c(1,2),by=list(dataExp$TargetID),FUN=mean])
dataExp <- aggregate(dataExp[,-c(1,2)],by=list(dataExp$TargetID),FUN=mean)
head(dataExp)
tail(dataExp)
rownames(dataExp)<-dataExp$Group.1
dataExp<-as.matrix(dataExp[,-1])
head(dataExp)
## Cahoy ###########################################
cahoy_ast=read.csv("../Data/Cahoy_S4_ast.csv", header = T)
cahoy_neu=read.csv("../Data/Cahoy_S6_neu.csv", header = T)
cahoy_oli=read.csv("../Data/Cahoy_S5_oli.csv", header = T)
asts <- toupper(cahoy_ast$Gene.Name)
neus <- toupper(cahoy_neu$Gene.Name)
common <- intersect(asts,neus)
asts <- unique(setdiff(asts,common))
neus <- unique(setdiff(neus,common))
txtdesc <- function(x) textConnection(paste(x, collapse="\n"))
ML_cahoy=MarkerList(file=txtdesc(c(paste(asts,"Astrocytes"),paste(neus,"Neurons"))))
dec_cahoy=ged(dataExp,ML_cahoy,"ssKL")
dec_cahoy_ssKL <- dec_cahoy@fit@H
dec_cahoy1=ged(dataExp,ML_cahoy,"DSA")
dec_cahoy2=ged(dataExp,ML_cahoy,"deconf")
dec_cahoy_ssKL
load("../Data/Astro_array.rda")
Astro_array
tork=read.csv("../Data/Torkamani.csv", header = T)
asts=toupper(tork$Astrocytes[!tork$Astrocytes==""])
neus=toupper(tork$Neurons[!tork$Neurons==""])
common <- intersect(asts,neus)
asts <- unique(setdiff(asts,common))
neus <- unique(setdiff(neus,common))
txtdesc <- function(x) textConnection(paste(x, collapse="\n"))
ML_cahoy=MarkerList(file=txtdesc(c(paste(asts,"Astrocytes"),paste(neus,"Neurons"))))
dec_cahoy=ged(dataExp,ML_cahoy,"ssKL")
dec_cahoy_ssKL <- dec_cahoy@fit@H
dec_cahoy_ssKL
Astro_array
rm(list=ls())
library(CellMix)
## micro-array data ################################################
dataExp <- read.csv("../Data/dataExpProbes.csv")
dataExp <- aggregate(dataExp[,-c(1,2)],by=list(dataExp$TargetID),FUN=mean)
rownames(dataExp)<-dataExp$Group.1
dataExp<-as.matrix(dataExp[,-1])
tork=read.csv("../Data/Torkamani.csv", header = T)
asts=toupper(tork$Astrocytes[!tork$Astrocytes==""])
neus=toupper(tork$Neurons[!tork$Neurons==""])
common <- intersect(asts,neus)
asts <- unique(setdiff(asts,common))
neus <- unique(setdiff(neus,common))
txtdesc <- function(x) textConnection(paste(x, collapse="\n"))
ML_tork=MarkerList(file=txtdesc(c(paste(asts,"Astrocytes"),paste(neus,"Neurons"))))
dec_tork=ged(dataExp,ML_tork,"ssKL")
dec_tork_ssKL <- dec_tork@fit@H
cahoy_ast=read.csv("../Data/Cahoy_S4_ast.csv", header = T)
cahoy_neu=read.csv("../Data/Cahoy_S6_neu.csv", header = T)
asts <- toupper(cahoy_ast$Gene.Name)
neus <- toupper(cahoy_neu$Gene.Name)
common <- intersect(asts,neus)
asts <- unique(setdiff(asts,common))
neus <- unique(setdiff(neus,common))
txtdesc <- function(x) textConnection(paste(x, collapse="\n"))
ML_cahoy=MarkerList(file=txtdesc(c(paste(asts,"Astrocytes"),paste(neus,"Neurons"))))
dec_cahoy=ged(dataExp,ML_cahoy,"ssKL")
dec_cahoy_ssKL <- dec_cahoy@fit@H
head(dec_cahoy_ssKL)
plot(dec_cahoy_ssKL$Astrocytes)
barplot(dec_cahoy_ssKL$Astrocytes)
barplot(dec_cahoy_ssKL[1,])
barplot(dec_cahoy_ssKL[1,],ylim=c(0.45,0.55))
abline(h=0.51)
signatures <- read.csv("../Data/hg19.cage_peak_tpm_ann.osc_pcells_brainExpressed_0.5TPMx2_aggregatedGene.csv")
SampleInfo <- read.csv("../Data/Fantom5SamplesAnnotated.csv")
n<- grep("Neurons",SampleInfo$Sample)
a<- grep("Astr",SampleInfo$Sample)
n
a
SampleInfo$Sample[n]
SampleInfo$Sample[a]
nL <- SampleInfo$Library[n[1:3]]
nS <- signatures[,colnames(signatures)%in%nL]
aL <- SampleInfo$Library[a[4:6]]
aS <- signatures[,colnames(signatures)%in%aL]
nL
nS
sig <- cbind(rowMeans(nS),rowMeans(aS))
rownames(sig) <- signatures$X
head(sig)
head(signatures
)
SampleInfo[n,]
SampleInfo[a,]
load("../Results/geneCounts.rda")
load("../Annot/geneInfo.rda")
head(geneCounts)
geneRPKM <- rpkm(x = geneCounts$counts, gene.length = geneCounts$annotation$Length)
geneTPM <- cpm(geneCounts$counts)
threshold = 0.5; nSamples = 3
filtered <- which(rowSums(geneRPKM > threshold) >= nSamples)
TPM <- geneTPM[filtered,]
head(TPM)
head(geneInfo)
typeof(TPM)
TPM<-data.frame(TPM)
head(TPM)
TPM <- cbind(geneInfo$gene_name[match(rownames(TPM),geneInfo$gene_id)],TPM)
head(TPM)
colnames(TPM)[1]<-"geneName"
head(TPM)
is.na(TPM$geneName)
is.na(TPM$geneName)==TRUE
which.na(TPM$geneName)
which(is.na(TPM$geneName))
which(TPM$geneName=="")
head(TPM)
TPM <- aggregate(TPM[,-1],by=list(TPM$geneName),FUN=mean)
head(TPM)
rownames(TPM) <- TPM$Group.1
TPM <-TPM[,-1]
head(TPM)
common <- intersect(rownames(TPM),rownames(sig))
TPM<-TPM[rownames(TPM)%in%common,]
head(TPM)
nrow(TPM)
nrow(sig)
head(sig)
colnames(sig) <- c("Nurons","Astrocytes")
head(sig)
colnames(sig) <- c("Neurons","Astrocytes")
head(sig)
sig <- data.frame(sig[match(rownames(TPM),rownames(sig)),])
output <- DeconRNASeq(datasets=TPM, signatures=sig)
library(DeconRNASeq)
output <- DeconRNASeq(datasets=TPM, signatures=sig)
np <- output$out.all[,1]
np
barplot(np)
barplot(np,ylim=c(0.4,0.6))
