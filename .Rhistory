useExp=dataExp[,-c(1,2)]
Samples_Array <-  c("C55F","C1078F","C1078T","C1541T","C1571F","C1571T","R1815F","R1815T","R4516F","R4516T","R4852F","R4852T")
Samples_array <- c("C1-F", "C2-F", "C2-T", "C3-T", "C4-F", "C4-T", "R1-F", "R1-T", "R2-F", "R2-T", "R3-F", "R3-T")
group_array <- c(rep("control", 6), rep("Rett", 6))
colnames(useExp) <- Samples_array
## load required packages ##################
library("limma")
library("ruv")
## micro-array data #######################
dataExp=read.csv("Data/dataExpProbes.csv")
infoExp=dataExp[,c(1,2)]
useExp=dataExp[,-c(1,2)]
Samples_Array <-  c("C55F","C1078F","C1078T","C1541T","C1571F","C1571T","R1815F","R1815T","R4516F","R4516T","R4852F","R4852T")
Samples_array <- c("C1-F", "C2-F", "C2-T", "C3-T", "C4-F", "C4-T", "R1-F", "R1-T", "R2-F", "R2-T", "R3-F", "R3-T")
group_array <- c(rep("control", 6), rep("Rett", 6))
colnames(useExp) <- Samples_array
library("limma")
library("ruv")
## micro-array data #######################
dataExp=read.csv("../Data/dataExpProbes.csv")
infoExp=dataExp[,c(1,2)]
useExp=dataExp[,-c(1,2)]
Samples_Array <-  c("C55F","C1078F","C1078T","C1541T","C1571F","C1571T","R1815F","R1815T","R4516F","R4516T","R4852F","R4852T")
Samples_array <- c("C1-F", "C2-F", "C2-T", "C3-T", "C4-F", "C4-T", "R1-F", "R1-T", "R2-F", "R2-T", "R3-F", "R3-T")
group_array <- c(rep("control", 6), rep("Rett", 6))
colnames(useExp) <- Samples_array
head(dataExp)
## Array Astrocyte plot ###########################
load("Data/Astro_array.rda")
barplot(height=1-as.numeric(Astro_array[1,-1]),
names.arg=Samples_array,
##        xlab="samples",
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
## Array Astrocyte plot ###########################
load("../Data/Astro_array.rda")
barplot(height=1-as.numeric(Astro_array[1,-1]),
names.arg=Samples_array,
##        xlab="samples",
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
barplot(height=1-as.numeric(Astro_array[1,-1]),
names.arg=Samples_array,
xlab="samples",
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
## Array Nuron Levels Plot ###########################
load("../Data/Astro_array.rda")
barplot(height=1-as.numeric(Astro_array[1,-1]),
names.arg=Samples_array,
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
intUQ <- plotMDS(useExp, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1.2), ylim=c(-1.1,0.6),
main="UQ",dim.plot = c(1,2), pch=20)
text(intUQ$x, intUQ$y, Samples_array,
pos=c(1,1,1,1,3,1,3,3,1,2,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
fit <- eBayes(lmFit(useExp, model.matrix(~group_array)))
fp_array <- topTable(fit, coef=2, number=Inf)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
ctl <- !infoExp$TargetID%in%fp_array$TargetID[1:5000]
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=1)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=1)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,1,3,3,1,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=2)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=3)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1),
ylim=c(-0.6,0.5),
main="RUV-2 (k=3)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,2,1,2,1,4),
col=c(rep("BLUE",6),rep("RED",6)))
## Array PC plots  ###########################
par(mfrow=c(2,2))
intUQ <- plotMDS(useExp, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1.2), ylim=c(-1.1,0.6),
main="UQ",dim.plot = c(1,2), pch=20)
text(intUQ$x, intUQ$y, Samples_array,
pos=c(1,1,1,1,3,1,3,3,1,2,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
fit <- eBayes(lmFit(useExp, model.matrix(~group_array)))
fp_array <- topTable(fit, coef=2, number=Inf)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
ctl <- !infoExp$TargetID%in%fp_array$TargetID[1:5000]
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=1)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=1)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,1,3,3,1,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=2)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=3)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1),
ylim=c(-0.6,0.5),
main="RUV-2 (k=3)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,2,1,2,1,4),
col=c(rep("BLUE",6),rep("RED",6)))
## RUV2 normalisation with k=2
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=2)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
ruv2 <- R2
ruv2 <- cbind(infoExp,ruv2)
## save(ruv2, file="Values/ruv2.rda")
## Distribution of P-Values
par(mfrow=c(2,1))
design_array0 <- model.matrix(~group_array)
fit <- eBayes(lmFit(useExp, design_array0))
FDR_array0 <- topTable(fit, coef=2, number=Inf)
hist(FDR_array0$P.Value, main="UQ", ylim=c(0,3000),breaks=40,xlab="P Value")
design_array2 <- model.matrix(~W2+group_array)
fit <- eBayes(lmFit(useExp, design_array2))
FDR_array2 <- topTable(fit, coef=4, number=Inf)
hist(FDR_array2$P.Value, main="k=2", ylim=c(0,3000),breaks=40,xlab="P Value")
## RUV2 normalisation
fit <- eBayes(lmFit(useExp, model.matrix(~group_array)))
fp_array <- topTable(fit, coef=2, number=Inf)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
rownames(fp_array) <- 1:nrow(fp_array)
RUVArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))),ctl=ctl, k=2)
## Differential expression analysis
design_array <- model.matrix(~RUVArray$W+group_array)
fit <- eBayes(lmFit(useExp, design_array))
FDR_array <- topTable(fit, coef=4, number=Inf)
FDR_array <- cbind(infoExp[rownames(FDR_array),], FDR_array[,c(1,2,4,5)])
rownames(FDR_array) <- 1:nrow(FDR_array)
## Adding ProbeID
load("Data/probe.rda")
FDR_array <- cbind(FDR_array[,1],
probe[match(FDR_array$ProbeID, probe$Array_Address_Id),c("Probe_Id")],
FDR_array[,-1])
colnames(FDR_array)[1:3] <- c("GeneName","ProbeID", "AddressID")
FDR_array$GeneName <- as.vector(FDR_array$GeneName)
FDR_array$GeneName[grep("Mar",FDR_array$GeneName)] <- paste("MARCH",substr(FDR_array$GeneName[grep("Mar",FDR_array$GeneName)],1,1),sep="")
FDR_array$GeneName[grep("Sep",FDR_array$GeneName)] <- paste("SEPT",substr(FDR_array$GeneName[grep("Sep",FDR_array$GeneName)],1,1),sep="")
## Adding GeneID
arrayAnnot=read.csv("/Volumes/Data0/PROJECTS/RettSyndromeTranscriptome/ANNOTATION/HumanHT-12_V4_0_R2_15002873_B 2.csv")
conv=read.csv("/Volumes/Data0/PROJECTS/RettSyndromeTranscriptome/ANNOTATION/conv_refseq_ensembl.csv")
m=match(FDR_array$AddressID, arrayAnnot$Array_Address_Id)
FDR_array$TxID=arrayAnnot$TxID_noV[m]
m=match(FDR_array$TxID, conv$From)
FDR_array$GeneID <- conv$To[m]
FDR_array <- FDR_array[,c("GeneName","GeneID","TxID",
"ProbeID","AddressID",
"logFC","AveExpr","P.Value","adj.P.Val")]
FDR_array <- FDR_array[!is.na(FDR_array$GeneID),]
## save(FDR_array, file="Results/FDR_array.rda")
## Array PC plots  ###########################
par(mfrow=c(2,2))
intUQ <- plotMDS(useExp, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1.2), ylim=c(-1.1,0.6),
main="UQ",dim.plot = c(1,2), pch=20)
text(intUQ$x, intUQ$y, Samples_array,
pos=c(1,1,1,1,3,1,3,3,1,2,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
fit <- eBayes(lmFit(useExp, model.matrix(~group_array)))
fp_array <- topTable(fit, coef=2, number=Inf)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
ctl <- !infoExp$TargetID%in%fp_array$TargetID[1:5000]
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=1)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=1)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,1,3,3,1,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=2)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=3)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1),
ylim=c(-0.6,0.5),
main="RUV-2 (k=3)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,2,1,2,1,4),
col=c(rep("BLUE",6),rep("RED",6)))
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=2)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
par(mfrow=c(1,1))
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=2)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
par(mfrow=c(2,1))
design_array0 <- model.matrix(~group_array)
fit <- eBayes(lmFit(useExp, design_array0))
FDR_array0 <- topTable(fit, coef=2, number=Inf)
hist(FDR_array0$P.Value, main="UQ", ylim=c(0,3000),breaks=40,xlab="P Value")
design_array2 <- model.matrix(~W2+group_array)
fit <- eBayes(lmFit(useExp, design_array2))
FDR_array2 <- topTable(fit, coef=4, number=Inf)
hist(FDR_array2$P.Value, main="k=2", ylim=c(0,3000),breaks=40,xlab="P Value")
## Array PC plots  ###########################
par(mfrow=c(2,2))
intUQ <- plotMDS(useExp, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1.2), ylim=c(-1.1,0.6),
main="UQ",dim.plot = c(1,2), pch=20)
text(intUQ$x, intUQ$y, Samples_array,
pos=c(1,1,1,1,3,1,3,3,1,2,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
fit <- eBayes(lmFit(useExp, model.matrix(~group_array)))
fp_array <- topTable(fit, coef=2, number=Inf)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
ctl <- !infoExp$TargetID%in%fp_array$TargetID[1:5000]
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=1)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=1)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,1,3,3,1,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=2)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=3)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1),
ylim=c(-0.6,0.5),
main="RUV-2 (k=3)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,2,1,2,1,4),
col=c(rep("BLUE",6),rep("RED",6)))
## RUV2 normalisation with k=2 ##########################
RUVArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
par(mfrow=c(1,1))
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=2)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
## Differential expression analysis #################
design_array <- model.matrix(~RUVArray$W+group_array)
fit <- eBayes(lmFit(useExp, design_array))
FDR_array <- topTable(fit, coef=4, number=Inf)
FDR_array <- cbind(infoExp[rownames(FDR_array),], FDR_array[,c(1,2,4,5)])
rownames(FDR_array) <- 1:nrow(FDR_array)
head(FDR_array)
## Adding ProbeID #############################
load("../Data/probe.rda")
FDR_array <- cbind(FDR_array[,1],
probe[match(FDR_array$ProbeID, probe$Array_Address_Id),c("Probe_Id")],
FDR_array[,-1])
colnames(FDR_array)[1:3] <- c("GeneName","ProbeID", "AddressID")
FDR_array$GeneName <- as.vector(FDR_array$GeneName)
FDR_array$GeneName[grep("Mar",FDR_array$GeneName)] <- paste("MARCH",substr(FDR_array$GeneName[grep("Mar",FDR_array$GeneName)],1,1),sep="")
FDR_array$GeneName[grep("Sep",FDR_array$GeneName)] <- paste("SEPT",substr(FDR_array$GeneName[grep("Sep",FDR_array$GeneName)],1,1),sep="")
getwd()
## Adding ProbeID #############################
load("../Data/probe.rda")
FDR_array <- cbind(FDR_array[,1],
probe[match(FDR_array$ProbeID, probe$Array_Address_Id),c("Probe_Id")],
FDR_array[,-1])
colnames(FDR_array)[1:3] <- c("GeneName","ProbeID", "AddressID")
FDR_array$GeneName <- as.vector(FDR_array$GeneName)
FDR_array$GeneName[grep("Mar",FDR_array$GeneName)] <- paste("MARCH",substr(FDR_array$GeneName[grep("Mar",FDR_array$GeneName)],1,1),sep="")
FDR_array$GeneName[grep("Sep",FDR_array$GeneName)] <- paste("SEPT",substr(FDR_array$GeneName[grep("Sep",FDR_array$GeneName)],1,1),sep="")
head(FDR_array)
## Adding GeneID ########################
arrayAnnot=read.csv("../Annot/HumanHT-12_V4_0_R2_15002873_B 2.csv")
conv=read.csv("../Annot/conv_refseq_ensembl.csv")
m=match(FDR_array$AddressID, arrayAnnot$Array_Address_Id)
FDR_array$TxID=arrayAnnot$TxID_noV[m]
m=match(FDR_array$TxID, conv$From)
FDR_array$GeneID <- conv$To[m]
FDR_array <- FDR_array[,c("GeneName","GeneID","TxID",
"ProbeID","AddressID",
"logFC","AveExpr","P.Value","adj.P.Val")]
FDR_array <- FDR_array[!is.na(FDR_array$GeneID),]
## save(FDR_array, file="Results/FDR_array.rda")
## load required packages ##################
library("limma")
library("ruv")
## micro-array data #######################
dataExp=read.csv("../Data/dataExpProbes.csv")
infoExp=dataExp[,c(1,2)]
useExp=dataExp[,-c(1,2)]
Samples_Array <-  c("C55F","C1078F","C1078T","C1541T","C1571F","C1571T","R1815F","R1815T","R4516F","R4516T","R4852F","R4852T")
Samples_array <- c("C1-F", "C2-F", "C2-T", "C3-T", "C4-F", "C4-T", "R1-F", "R1-T", "R2-F", "R2-T", "R3-F", "R3-T")
group_array <- c(rep("control", 6), rep("Rett", 6))
colnames(useExp) <- Samples_array
## Array Nuron Levels Plot ###########################
load("../Data/Astro_array.rda")
barplot(height=1-as.numeric(Astro_array[1,-1]),
names.arg=Samples_array,
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
## Array PC plots  ###########################
par(mfrow=c(2,2))
intUQ <- plotMDS(useExp, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1.2), ylim=c(-1.1,0.6),
main="UQ",dim.plot = c(1,2), pch=20)
text(intUQ$x, intUQ$y, Samples_array,
pos=c(1,1,1,1,3,1,3,3,1,2,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
fit <- eBayes(lmFit(useExp, model.matrix(~group_array)))
fp_array <- topTable(fit, coef=2, number=Inf)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
ctl <- !infoExp$TargetID%in%fp_array$TargetID[1:5000]
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=1)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=1)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,1,3,3,1,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=2)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=3)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1),
ylim=c(-0.6,0.5),
main="RUV-2 (k=3)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,2,1,2,1,4),
col=c(rep("BLUE",6),rep("RED",6)))
## RUV2 normalisation with k=2 ##########################
RUVArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
par(mfrow=c(1,1))
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=2)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
## Differential expression analysis #################
design_array <- model.matrix(~RUVArray$W+group_array)
fit <- eBayes(lmFit(useExp, design_array))
FDR_array <- topTable(fit, coef=4, number=Inf)
FDR_array <- cbind(infoExp[rownames(FDR_array),], FDR_array[,c(1,2,4,5)])
rownames(FDR_array) <- 1:nrow(FDR_array)
## Adding ProbeID #############################
load("../Data/probe.rda")
FDR_array <- cbind(FDR_array[,1],
probe[match(FDR_array$ProbeID, probe$Array_Address_Id),c("Probe_Id")],
FDR_array[,-1])
colnames(FDR_array)[1:3] <- c("GeneName","ProbeID", "AddressID")
FDR_array$GeneName <- as.vector(FDR_array$GeneName)
FDR_array$GeneName[grep("Mar",FDR_array$GeneName)] <- paste("MARCH",substr(FDR_array$GeneName[grep("Mar",FDR_array$GeneName)],1,1),sep="")
FDR_array$GeneName[grep("Sep",FDR_array$GeneName)] <- paste("SEPT",substr(FDR_array$GeneName[grep("Sep",FDR_array$GeneName)],1,1),sep="")
m=match(FDR_array$AddressID, arrayAnnot$Array_Address_Id)
FDR_array$TxID=arrayAnnot$TxID_noV[m]
m=match(FDR_array$TxID, conv$From)
FDR_array$GeneID <- conv$To[m]
head(FDR_array)
FDR_array <- FDR_array[,c("GeneName","GeneID","TxID",
"ProbeID","AddressID",
"logFC","AveExpr","P.Value","adj.P.Val")]
FDR_array <- FDR_array[!is.na(FDR_array$GeneID),]
save(FDR_array, file="../Results/FDR_array.rda")
