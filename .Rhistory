load("../Results/geneCounts.rda")
load("../Annot/geneInfo.rda")
geneRPKM <- rpkm(x = geneCounts$counts, gene.length = geneCounts$annotation$Length)
geneTPM <- cpm(geneCounts$counts)
threshold = 0.5; nSamples = 3
filtered <- which(rowSums(geneRPKM > threshold) >= nSamples)
TPM <- geneTPM[filtered,]
TPM<-data.frame(TPM)
TPM <- cbind(geneInfo$gene_name[match(rownames(TPM),geneInfo$gene_id)],TPM)
colnames(TPM)[1]<-"geneName"
TPM <- aggregate(TPM[,-1],by=list(TPM$geneName),FUN=mean)
rownames(TPM) <- TPM$Group.1
TPM <-TPM[,-1]
TPM <- as.matrix(TPM)
cahoy_ast=read.csv("../Data/Cahoy_S4_ast.csv", header = T)
cahoy_neu=read.csv("../Data/Cahoy_S6_neu.csv", header = T)
asts <- toupper(cahoy_ast$Gene.Name)
neus <- toupper(cahoy_neu$Gene.Name)
common <- intersect(asts,neus)
asts <- unique(setdiff(asts,common))
neus <- unique(setdiff(neus,common))
txtdesc <- function(x) textConnection(paste(x, collapse="\n"))
ML_cahoy=MarkerList(file=txtdesc(c(paste(asts,"Astrocytes"),paste(neus,"Neurons"))))
dec_cahoy=ged(TPM,ML_cahoy,"ssKL")
dec_cahoy_ssKL <- dec_cahoy@fit@H
dec-cahoy_ssKL
dec_cahoy_ssKL
dataExp <- read.csv("../Data/dataExpProbes.csv")
dataExp <- aggregate(dataExp[,-c(1,2)],by=list(dataExp$TargetID),FUN=mean)
rownames(dataExp)<-dataExp$Group.1
dataExp<-as.matrix(dataExp[,-1])
head(dataExp)
min(dataExp)
## Part I: Micro-array Data ########################################
library(CellMix)
## micro-array data ################################################
dataExp <- read.csv("../Data/dataExpProbes.csv")
dataExp <- aggregate(dataExp[,-c(1,2)],by=list(dataExp$TargetID),FUN=mean)
rownames(dataExp)<-dataExp$Group.1
dataExp<-as.matrix(dataExp[,-1])
## Torkanmani ####################################
tork=read.csv("../Data/Torkamani.csv", header = T)
asts=toupper(tork$Astrocytes[!tork$Astrocytes==""])
neus=toupper(tork$Neurons[!tork$Neurons==""])
common <- intersect(asts,neus)
asts <- unique(setdiff(asts,common))
neus <- unique(setdiff(neus,common))
txtdesc <- function(x) textConnection(paste(x, collapse="\n"))
ML_tork=MarkerList(file=txtdesc(c(paste(asts,"Astrocytes"),paste(neus,"Neurons"))))
dec_tork=ged(dataExp,ML_tork,"ssKL")
dec_tork_ssKL <- dec_tork@fit@H
## Cahoy #########################################################
cahoy_ast=read.csv("../Data/Cahoy_S4_ast.csv", header = T)
cahoy_neu=read.csv("../Data/Cahoy_S6_neu.csv", header = T)
asts <- toupper(cahoy_ast$Gene.Name)
neus <- toupper(cahoy_neu$Gene.Name)
common <- intersect(asts,neus)
asts <- unique(setdiff(asts,common))
neus <- unique(setdiff(neus,common))
txtdesc <- function(x) textConnection(paste(x, collapse="\n"))
ML_cahoy=MarkerList(file=txtdesc(c(paste(asts,"Astrocytes"),paste(neus,"Neurons"))))
dec_cahoy=ged(2^dataExp,ML_cahoy,"ssKL")
dec_cahoy_ssKL <- dec_cahoy@fit@H
dec_cahoy_ssKL
## Part I: Micro-array Data ########################################
library(CellMix)
## RUV normalised micro-array data ################################################
load("../Results/R1.rda")
dataExp <- aggregate(R1[,-c(1,2)],by=list(R1$TargetID),FUN=mean)
rownames(dataExp)<-dataExp$Group.1
dataExp<-as.matrix(dataExp[,-1])
## Cahoy #########################################################
cahoy_ast=read.csv("../Data/Cahoy_S4_ast.csv", header = T)
cahoy_neu=read.csv("../Data/Cahoy_S6_neu.csv", header = T)
asts <- toupper(cahoy_ast$Gene.Name)
neus <- toupper(cahoy_neu$Gene.Name)
common <- intersect(asts,neus)
asts <- unique(setdiff(asts,common))
neus <- unique(setdiff(neus,common))
txtdesc <- function(x) textConnection(paste(x, collapse="\n"))
ML_cahoy=MarkerList(file=txtdesc(c(paste(asts,"Astrocytes"),paste(neus,"Neurons"))))
dec_cahoy=ged(2^dataExp,ML_cahoy,"ssKL")
dec_cahoy_ssKL <- dec_cahoy@fit@H
dec_cahoy_ssKL
load("../Results/geneCounts.rda")
load("../Annot/geneInfo.rda")
geneRPKM <- rpkm(x = geneCounts$counts, gene.length = geneCounts$annotation$Length)
geneTPM <- cpm(geneCounts$counts)
threshold = 0.5; nSamples = 3
filtered <- which(rowSums(geneRPKM > threshold) >= nSamples)
TPM <- geneTPM[filtered,]
TPM<-data.frame(TPM)
TPM <- cbind(geneInfo$gene_name[match(rownames(TPM),geneInfo$gene_id)],TPM)
colnames(TPM)[1]<-"geneName"
TPM <- aggregate(TPM[,-1],by=list(TPM$geneName),FUN=mean)
rownames(TPM) <- TPM$Group.1
TPM <-TPM[,-1]
TPM <- as.matrix(TPM)
cahoy_ast=read.csv("../Data/Cahoy_S4_ast.csv", header = T)
cahoy_neu=read.csv("../Data/Cahoy_S6_neu.csv", header = T)
asts <- toupper(cahoy_ast$Gene.Name)
neus <- toupper(cahoy_neu$Gene.Name)
common <- intersect(asts,neus)
asts <- unique(setdiff(asts,common))
neus <- unique(setdiff(neus,common))
txtdesc <- function(x) textConnection(paste(x, collapse="\n"))
ML_cahoy=MarkerList(file=txtdesc(c(paste(asts,"Astrocytes"),paste(neus,"Neurons"))))
dec_cahoy=ged(TPM,ML_cahoy,"ssKL")
dec_cahoy_ssKL <- dec_cahoy@fit@H
dec_cahoy_ssKL
## Cahoy #######################################
load("../Results/FDR_seq.rda")
counts<-FDR_seq[,8:13]
geneTPM <- cpm(counts)
TPM<-data.frame(geneTPM)
TPM <- cbind(FDR_seq$geneNames,TPM)
colnames(TPM)[1]<-"geneName"
TPM <- aggregate(TPM[,-1],by=list(TPM$geneName),FUN=mean)
rownames(TPM) <- TPM$Group.1
TPM <-TPM[,-1]
TPM<-as.matrix(TPM)
cahoy_ast=read.csv("../Data/Cahoy_S4_ast.csv", header = T)
cahoy_neu=read.csv("../Data/Cahoy_S6_neu.csv", header = T)
asts <- toupper(cahoy_ast$Gene.Name)
neus <- toupper(cahoy_neu$Gene.Name)
common <- intersect(asts,neus)
asts <- unique(setdiff(asts,common))
neus <- unique(setdiff(neus,common))
txtdesc <- function(x) textConnection(paste(x, collapse="\n"))
ML_cahoy=MarkerList(file=txtdesc(c(paste(asts,"Astrocytes"),paste(neus,"Neurons"))))
dec_cahoy=ged(TPM,ML_cahoy,"ssKL")
dec_cahoy_ssKL <- dec_cahoy@fit@H
dec_cahoy_ssKL
0.65-047
0.65-0.47
0.61-0.52
load("../Results/geneCounts.rda")
load("../Annot/geneInfo.rda")
geneRPKM <- rpkm(x = geneCounts$counts, gene.length = geneCounts$annotation$Length)
geneTPM <- cpm(geneCounts$counts)
threshold = 0.5; nSamples = 3
filtered <- which(rowSums(geneRPKM > threshold) >= nSamples)
TPM <- geneTPM[filtered,]
TPM<-data.frame(TPM)
TPM <- cbind(geneInfo$gene_name[match(rownames(TPM),geneInfo$gene_id)],TPM)
colnames(TPM)[1]<-"geneName"
TPM <- aggregate(TPM[,-1],by=list(TPM$geneName),FUN=mean)
rownames(TPM) <- TPM$Group.1
TPM <-TPM[,-1]
TPM <- as.matrix(TPM)
cahoy_ast=read.csv("../Data/Cahoy_S4_ast.csv", header = T)
cahoy_neu=read.csv("../Data/Cahoy_S6_neu.csv", header = T)
asts <- toupper(cahoy_ast$Gene.Name)
neus <- toupper(cahoy_neu$Gene.Name)
common <- intersect(asts,neus)
asts <- unique(setdiff(asts,common))
neus <- unique(setdiff(neus,common))
txtdesc <- function(x) textConnection(paste(x, collapse="\n"))
ML_cahoy=MarkerList(file=txtdesc(c(paste(asts,"Astrocytes"),paste(neus,"Neurons"))))
dec_cahoy=ged(TPM,ML_cahoy,"ssKL")
dec_cahoy_ssKL <- dec_cahoy@fit@H
dec_cahoy_ssKL
## Load required packages ##########################################
library(edgeR)
library(RUVSeq)
## Load inputs/data #############################################
load("../Results/geneCounts.rda")
load("../Data/Astro_seq.rda")
load("../Annot/geneInfo.rda")
## Two versions of sample naming ###################################
Samples_Seq <- c("C1078", "C1541", "C1571", "R1815", "R4516", "R4852")
Samples_seq <- c("C2", "C3", "C4", "R1", "R2", "R3")
## Normalisation and Filtering ###########################################
geneRPKM <- rpkm(x = geneCounts$counts, gene.length = geneCounts$annotation$Length)
geneCPM <- cpm(geneCounts$counts)
threshold = 0.5; nSamples = 3
filtered <- which(rowSums(geneRPKM > threshold) >= nSamples)
counts <- geneCounts$counts[filtered,]
RPKM <- geneRPKM[filtered,]
CPM <- geneCPM[filtered,]
colnames(counts) <- Samples_seq
colnames(RPKM) <- Samples_seq
colnames(CPM) <- Samples_seq
plotMDS(voom(counts)$E)
## Load required packages ##########################################
library(edgeR)
library(RUVSeq)
## Load inputs/data #############################################
load("../Results/geneCounts.rda")
load("../Data/Astro_seq.rda")
load("../Annot/geneInfo.rda")
## Two versions of sample naming ###################################
Samples_Seq <- c("C1078", "C1541", "C1571", "R1815", "R4516", "R4852")
Samples_seq <- c("C2", "C3", "C4", "R1", "R2", "R3")
## Normalisation and Filtering ###########################################
geneRPKM <- rpkm(x = geneCounts$counts, gene.length = geneCounts$annotation$Length)
geneCPM <- cpm(geneCounts$counts)
threshold = 0.5; nSamples = 3
filtered <- which(rowSums(geneRPKM > threshold) >= nSamples)
counts <- geneCounts$counts[filtered,]
RPKM <- geneRPKM[filtered,]
CPM <- geneCPM[filtered,]
colnames(counts) <- Samples_seq
colnames(RPKM) <- Samples_seq
colnames(CPM) <- Samples_seq
## Neuron Levels Plot #######################################################
barplot(height=1-as.numeric(Astro_seq),
names.arg=Samples_seq,
ylab = "Proportion of Neurons",
ylim=c(0.48,0.52), col=c(rep("red", 3), rep("blue", 3)),
xpd=FALSE)
abline(h=0.5, col="grey")
## PC plots ###################################################################
group_seq <- c("control", "control", "control", "Rett", "Rett", "Rett")
input <- DGEList(counts=counts, group=group_seq)
input <- calcNormFactors(input)
plotMDS(input, col=c(rep("blue",3),rep("red",3)),
xlab="PC1", ylab="PC2", main="TMM Normalisation")
help("plotMDS")
plotMDS(input, col=c(rep("blue",3),rep("red",3)),
xlab="PC1", ylab="PC2", main="TMM Normalisation",gene.selection = "common")
help(plotMDS)
plotMDS(input, col=c(rep("blue",3),rep("red",3)),
xlab="PC1", ylab="PC2", main="TMM Normalisation",gene.selection = "common",top=5000)
plotMDS(input, col=c(rep("blue",3),rep("red",3)),
xlab="PC1", ylab="PC2", main="TMM Normalisation",gene.selection = "common",top=50000)
plotMDS(input, col=c(rep("blue",3),rep("red",3)),
xlab="PC1", ylab="PC2", main="TMM Normalisation",gene.selection = "common",top=500000)
plotMDS(input, col=c(rep("blue",3),rep("red",3)),
xlab="PC1", ylab="PC2", main="TMM Normalisation",gene.selection = "common",top=5000000)
load("../Results/geneCounts.rda")
load("../Annot/geneInfo.rda")
geneRPKM <- rpkm(x = geneCounts$counts, gene.length = geneCounts$annotation$Length)
geneTPM <- cpm(geneCounts$counts)
threshold = 0.5; nSamples = 3
filtered <- which(rowSums(geneRPKM > threshold) >= nSamples)
counts <-geneCounts$counts[filtered,]
counts
head(counts)
load("../Results/geneCounts.rda")
load("../Annot/geneInfo.rda")
geneRPKM <- rpkm(x = geneCounts$counts, gene.length = geneCounts$annotation$Length)
geneTPM <- cpm(geneCounts$counts)
threshold = 0.5; nSamples = 3
filtered <- which(rowSums(geneRPKM > threshold) >= nSamples)
counts <- geneCounts$counts[filtered,]
TPM <- 2^(voom(counts)$E)
TPM<-data.frame(TPM)
TPM <- cbind(geneInfo$gene_name[match(rownames(TPM),geneInfo$gene_id)],TPM)
colnames(TPM)[1]<-"geneName"
TPM <- aggregate(TPM[,-1],by=list(TPM$geneName),FUN=mean)
rownames(TPM) <- TPM$Group.1
TPM <-TPM[,-1]
TPM <- as.matrix(TPM)
cahoy_ast=read.csv("../Data/Cahoy_S4_ast.csv", header = T)
cahoy_neu=read.csv("../Data/Cahoy_S6_neu.csv", header = T)
asts <- toupper(cahoy_ast$Gene.Name)
neus <- toupper(cahoy_neu$Gene.Name)
common <- intersect(asts,neus)
asts <- unique(setdiff(asts,common))
neus <- unique(setdiff(neus,common))
txtdesc <- function(x) textConnection(paste(x, collapse="\n"))
ML_cahoy=MarkerList(file=txtdesc(c(paste(asts,"Astrocytes"),paste(neus,"Neurons"))))
dec_cahoy=ged(TPM,ML_cahoy,"ssKL")
dec_cahoy_ssKL <- dec_cahoy@fit@H
dec_cahoy_ssKL
## Load required packages ##########################################
library(edgeR)
library(RUVSeq)
## Load inputs/data #############################################
load("../Results/geneCounts.rda")
load("../Data/Astro_seq.rda")
load("../Annot/geneInfo.rda")
## Two versions of sample naming ###################################
Samples_Seq <- c("C1078", "C1541", "C1571", "R1815", "R4516", "R4852")
Samples_seq <- c("C2", "C3", "C4", "R1", "R2", "R3")
## Normalisation and Filtering ###########################################
geneRPKM <- rpkm(x = geneCounts$counts, gene.length = geneCounts$annotation$Length)
geneCPM <- cpm(geneCounts$counts)
threshold = 0.5; nSamples = 3
filtered <- which(rowSums(geneRPKM > threshold) >= nSamples)
counts <- geneCounts$counts[filtered,]
RPKM <- geneRPKM[filtered,]
CPM <- geneCPM[filtered,]
colnames(counts) <- Samples_seq
colnames(RPKM) <- Samples_seq
colnames(CPM) <- Samples_seq
## Neuron Levels Plot #######################################################
barplot(height=1-as.numeric(Astro_seq),
names.arg=Samples_seq,
ylab = "Proportion of Neurons",
ylim=c(0.48,0.52), col=c(rep("red", 3), rep("blue", 3)),
xpd=FALSE)
abline(h=0.5, col="grey")
## PC plots ###################################################################
group_seq <- c("control", "control", "control", "Rett", "Rett", "Rett")
input <- DGEList(counts=counts, group=group_seq)
input <- calcNormFactors(input)
plotMDS(input, col=c(rep("blue",3),rep("red",3)),
xlab="PC1", ylab="PC2", main="TMM Normalisation")
plotMDS(input, col=c(rep("blue",3),rep("red",3)),
xlab="PC1", ylab="PC2", main="TMM Normalisation",top=5000)
plotMDS(input, col=c(rep("blue",3),rep("red",3)),
xlab="PC1", ylab="PC2", main="TMM Normalisation",top=15000)
plotMDS(input, col=c(rep("blue",3),rep("red",3)),
xlab="PC1", ylab="PC2", main="TMM Normalisation",top=25000)
plotMDS(input, col=c(rep("blue",3),rep("red",3)),
xlab="PC1", ylab="PC2", main="TMM Normalisation",top=Inf)
plotMDS(input, col=c(rep("blue",3),rep("red",3)),
xlab="PC1", ylab="PC2", main="TMM Normalisation",top=Inf)
plotMDS(input, col=c(rep("blue",3),rep("red",3)),
xlab="PC1", ylab="PC2", main="TMM Normalisation")
help("plotMDS")
help("plotPCA")
plotPCA()
plotPCA
library(EDASeq)
## Load required packages ##########################################
library(edgeR)
library(RUVSeq)
library(EDASeq)
## Load inputs/data #############################################
load("../Results/geneCounts.rda")
load("../Data/Astro_seq.rda")
load("../Annot/geneInfo.rda")
## Two versions of sample naming ###################################
Samples_Seq <- c("C1078", "C1541", "C1571", "R1815", "R4516", "R4852")
Samples_seq <- c("C2", "C3", "C4", "R1", "R2", "R3")
## Normalisation and Filtering ###########################################
geneRPKM <- rpkm(x = geneCounts$counts, gene.length = geneCounts$annotation$Length)
geneCPM <- cpm(geneCounts$counts)
threshold = 0.5; nSamples = 3
filtered <- which(rowSums(geneRPKM > threshold) >= nSamples)
counts <- geneCounts$counts[filtered,]
RPKM <- geneRPKM[filtered,]
CPM <- geneCPM[filtered,]
colnames(counts) <- Samples_seq
colnames(RPKM) <- Samples_seq
colnames(CPM) <- Samples_seq
## Neuron Levels Plot #######################################################
barplot(height=1-as.numeric(Astro_seq),
names.arg=Samples_seq,
ylab = "Proportion of Neurons",
ylim=c(0.48,0.52), col=c(rep("red", 3), rep("blue", 3)),
xpd=FALSE)
abline(h=0.5, col="grey")
## PC plots ###################################################################
group_seq <- c("control", "control", "control", "Rett", "Rett", "Rett")
input <- DGEList(counts=counts, group=group_seq)
input <- calcNormFactors(input)
plotMDS(input, col=c(rep("blue",3),rep("red",3)),
xlab="PC1", ylab="PC2", main="TMM Normalisation")
plotPCA(input)
plotPCA(counts)
## first past differential expression analysis ####################################
input <- estimateCommonDisp(input, verbose=TRUE)
input <- estimateTagwiseDisp(input)
plotBCV(input)
et <- exactTest(input)
firstPass <- topTags(et,n=Inf)
controlGenes <- rownames(firstPass)[-c(1:5000)]
## RUV ##########################################################################
RUV1 <- RUVg(counts, controlGenes, k=1)
N <- RUV1$normalizedCounts
plotMDS(DGEList(RUV1$normalizedCounts), col=c(rep("blue",3),rep("red",3)),
xlab="PC1", ylab="PC2", main="RUVg (k=1)")
RUV2 <- RUVg(counts, controlGenes, k=2)
plotMDS(DGEList(RUV2$normalizedCounts), col=c(rep("blue",3),rep("red",3)),
xlab="PC1", ylab="PC2", main="RUVg (k=2)")
plotPCA(N)
help("plotPCA")
## load required packages ##################
library(limma)
library(ruv)
library(EDASeq)
## micro-array data #######################
dataExp=read.csv("../Data/dataExpProbes.csv")
infoExp=dataExp[,c(1,2)]
useExp=dataExp[,-c(1,2)]
Samples_Array <-  c("C55F","C1078F","C1078T","C1541T","C1571F","C1571T","R1815F","R1815T","R4516F","R4516T","R4852F","R4852T")
Samples_array <- c("C1-F", "C2-F", "C2-T", "C3-T", "C4-F", "C4-T", "R1-F", "R1-T", "R2-F", "R2-T", "R3-F", "R3-T")
group_array <- c(rep("control", 6), rep("Rett", 6))
colnames(useExp) <- Samples_array
## Array Nuron Levels Plot ###########################
load("../Data/Astro_array.rda")
barplot(height=1-as.numeric(Astro_array[1,-1]),
names.arg=Samples_array,
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
## Array PC plots  ###########################
par(mfrow=c(2,2))
intUQ <- plotMDS(useExp, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1.2), ylim=c(-1.1,0.6),
main="UQ",dim.plot = c(1,2), pch=20)
text(intUQ$x, intUQ$y, Samples_array,
pos=c(1,1,1,1,3,1,3,3,1,2,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
fit <- eBayes(lmFit(useExp, model.matrix(~group_array)))
fp_array <- topTable(fit, coef=2, number=Inf)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
ctl <- !infoExp$TargetID%in%fp_array$TargetID[1:5000]
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=1)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=1)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,1,3,3,1,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=2)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=3)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1),
ylim=c(-0.6,0.5),
main="RUV-2 (k=3)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,2,1,2,1,4),
col=c(rep("BLUE",6),rep("RED",6)))
## RUV2 normalisation with k=2 ##########################
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W2 <- RUVnArray$W
I <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,1]
C <- lmFit(useExp, design=model.matrix(~W2))$coefficients[,-1]
R2 <- useExp - as.matrix(C)%*%as.matrix(t(W2)) - I
par(mfrow=c(1,1))
intk2 <- plotMDS(R2, col=c(rep("BLUE",6),rep("RED",6)),
xlab="PC1", ylab="PC2",
xlim=c(-0.6,1), ylim=c(-0.6,0.5),
main="RUV-2 (k=2)",dim.plot=c(1,2),pch=20)
text(intk2$x, intk2$y, Samples_array,
pos=c(1,1,2,4,3,3,1,1,1,1,1,1),
col=c(rep("BLUE",6),rep("RED",6)))
R1 <- removeBatchEffect(useExp,covariates=W2,design=model.matrix(~group_array))
R1<-cbind(infoExp,R1)
R2<-cbind(infoExp,R2)
## save(R1, file="../Results/R1.rda")
## save(R2, file="../Results/R2.rda")
help(R1)
head(R1)
plotPCA(R1[,-c(1,2)])
plotPCA(as.matrix(R1[,-c(1,2)]))
plotPCA(as.matrix(R2[,-c(1,2)]))
help("plotPCA")
plotPCA(as.matrix(R1[,-c(1,2)]),isLog=TRUE)
plotPCA(as.matrix(R2[,-c(1,2)]),isLog=TRUE)
plotPCA(useExp,isLog=TRUE)
plotPCA(as.matrix(useExp),isLog=TRUE)
library(CellMix)
## RUV normalised micro-array data ################################################
load("../Results/R1.rda")
dataExp <- aggregate(R1[,-c(1,2)],by=list(R1$TargetID),FUN=mean)
rownames(dataExp)<-dataExp$Group.1
dataExp<-as.matrix(dataExp[,-1])
## Cahoy #########################################################
cahoy_ast=read.csv("../Data/Cahoy_S4_ast.csv", header = T)
cahoy_neu=read.csv("../Data/Cahoy_S6_neu.csv", header = T)
asts <- toupper(cahoy_ast$Gene.Name)
neus <- toupper(cahoy_neu$Gene.Name)
common <- intersect(asts,neus)
asts <- unique(setdiff(asts,common))
neus <- unique(setdiff(neus,common))
txtdesc <- function(x) textConnection(paste(x, collapse="\n"))
ML_cahoy=MarkerList(file=txtdesc(c(paste(asts,"Astrocytes"),paste(neus,"Neurons"))))
dec_cahoy=ged(2^dataExp,ML_cahoy,"ssKL")
dec_cahoy_ssKL <- dec_cahoy@fit@H
dec_cahoy_ssKL
## Cahoy #######################################
load("../Results/FDR_seq.rda")
counts<-FDR_seq[,8:13]
geneTPM <- cpm(counts)
TPM<-data.frame(geneTPM)
TPM <- cbind(FDR_seq$geneNames,TPM)
colnames(TPM)[1]<-"geneName"
TPM <- aggregate(TPM[,-1],by=list(TPM$geneName),FUN=mean)
rownames(TPM) <- TPM$Group.1
TPM <-TPM[,-1]
TPM<-as.matrix(TPM)
cahoy_ast=read.csv("../Data/Cahoy_S4_ast.csv", header = T)
cahoy_neu=read.csv("../Data/Cahoy_S6_neu.csv", header = T)
asts <- toupper(cahoy_ast$Gene.Name)
neus <- toupper(cahoy_neu$Gene.Name)
common <- intersect(asts,neus)
asts <- unique(setdiff(asts,common))
neus <- unique(setdiff(neus,common))
txtdesc <- function(x) textConnection(paste(x, collapse="\n"))
ML_cahoy=MarkerList(file=txtdesc(c(paste(asts,"Astrocytes"),paste(neus,"Neurons"))))
dec_cahoy=ged(TPM,ML_cahoy,"ssKL")
dec_cahoy_ssKL <- dec_cahoy@fit@H
dec_cahoy_ssKL
