validationFDR <- p.adjust(DE_seq$pValue_array,method="BH")
DE_seq <- cbind(DE_seq,validationFDR)
DE_seq_validated <- DE_seq[DE_seq$validationFDR<0.05 & DE_seq$logFC_seq*DE_seq$logFC_array>0, ]
nrow(DE_seq_validated);nrow(DE_seq);nrow(DE_seq_validated)/nrow(DE_seq)
## Differential expression analysis - Frontal ##########################
## 54%
useExpF <- useExp[,c(1,2,5,7,9,11)]
groupF <- c(rep("control", 3), rep("Rett", 3))
fit <- eBayes(lmFit(useExpF, model.matrix(~groupF)))
fp_array <- topTable(fit, coef=2, number=Inf)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
ctlF <- !infoExp$GeneName%in%fp_array$GeneName[1:5000]
RUVnArray <- RUV2(Y=t(useExpF), X=t(t(c(rep(0,3), rep(1,3)))), ctl=ctlF, k=2)
WF <- RUVnArray$W
RF <- removeBatchEffect(useExpF,covariates=WF,design=model.matrix(~groupF))
plotPCA(as.matrix(RF),isLog=TRUE)
RF<-cbind(infoExp,RF)
design_array <- model.matrix(~WF+groupF)
fit <- eBayes(lmFit(useExpF, design_array))
FDR_F <- topTable(fit, coef=4, number=Inf)
FDR_F <- cbind(infoExp[rownames(FDR_F),], FDR_F[,c(1,2,4,5)])
rownames(FDR_F) <- 1:nrow(FDR_F)
common <- cbind(FDR_seq[,-5],
FDR_F[match(FDR_seq$geneID, FDR_F$GeneID),-c(1,2)])
colnames(common) <- c("geneID", "geneName",
"logFC_seq","logCPM_seq", "pValue_seq", "FDR_seq",
"TxID","probeID", "addressID",
"logFC_array", "aveExpr_array","pValue_array", "FDR_array")
common <- common[!is.na(common$probeID),]
rownames(common) <- 1:nrow(common)
DE_seq <- common[common$FDR_seq<0.05,]
validationFDR <- p.adjust(DE_seq$pValue_array,method="BH")
DE_seq <- cbind(DE_seq,validationFDR)
DE_seq_VF <- DE_seq[DE_seq$validationFDR<0.05 & DE_seq$logFC_seq*DE_seq$logFC_array>0, ]
nrow(DE_seq_VF);nrow(DE_seq);nrow(DE_seq_VF)/nrow(DE_seq)
## Differential expression analysis - Temporal ##########################
## 67%
useExpT <- useExp[,c(3,4,6,8,10,12)]
fit <- eBayes(lmFit(useExpT, model.matrix(~groupF)))
fp_array <- topTable(fit, coef=2, number=Inf)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
ctlT <- !infoExp$GeneName%in%fp_array$GeneName[1:5000]
RUVnArray <- RUV2(Y=t(useExpT), X=t(t(c(rep(0,3), rep(1,3)))), ctl=ctlT, k=2)
WT <- RUVnArray$W
RT <- removeBatchEffect(useExpT,covariates=WT,design=model.matrix(~groupF))
plotPCA(as.matrix(RT),isLog=TRUE)
RT<-cbind(infoExp,RT)
design_array <- model.matrix(~WT+groupF)
fit <- eBayes(lmFit(useExpT, design_array))
FDR_T <- topTable(fit, coef=4, number=Inf)
FDR_T <- cbind(infoExp[rownames(FDR_T),], FDR_T[,c(1,2,4,5)])
rownames(FDR_T) <- 1:nrow(FDR_T)
common <- cbind(FDR_seq[,-5],
FDR_T[match(FDR_seq$geneID, FDR_T$GeneID),-c(1,2)])
colnames(common) <- c("geneID", "geneName",
"logFC_seq","logCPM_seq", "pValue_seq", "FDR_seq",
"TxID","probeID", "addressID",
"logFC_array", "aveExpr_array","pValue_array", "FDR_array")
common <- common[!is.na(common$probeID),]
rownames(common) <- 1:nrow(common)
DE_seq <- common[common$FDR_seq<0.05,]
validationFDR <- p.adjust(DE_seq$pValue_array,method="BH")
DE_seq <- cbind(DE_seq,validationFDR)
DE_seq_VT <- DE_seq[DE_seq$validationFDR<0.05 & DE_seq$logFC_seq*DE_seq$logFC_array>0, ]
nrow(DE_seq_VT);nrow(DE_seq);nrow(DE_seq_VT)/nrow(DE_seq)
## Frontal vs Temporal ############
Z<-intersect(DE_seq_VF$geneName,DE_seq_VT$geneName)
q<-length(Z)
m<-nrow(DE_seq_VF)
n<-nrow(DE_seq)-m
k<-nrow(DE_seq_VT)
phyper(q,m,n,k,lower.tail = FALSE)
## complement cascade #######
CC <- c("C1QA","C1QB","C1QC",
"C3","TGFBR2","CX3CR1","TYROBP")
CC%in%Z
CC%in%DE_seq$geneName
CC%in%DE_seq_VT$geneName
CC%in%DE_seq_VF$geneName
## More comparisons ############
A <- unique(union(DE_seq_VT$geneName,DE_seq_VF$geneName))
length(A)/nrow(DE_seq)
## 72%
B<-unique(union(A,DE_seq_validated))
length(B)/nrow(DE_seq)
## 80%
C<-setdiff(DE_seq_validated$geneName,union(DE_seq_VT$geneName,DE_seq_VF$geneName))
length(C)
D<-setdiff(union(DE_seq_VT$geneName,DE_seq_VF$geneName),DE_seq_validated$geneName)
length(D)
setdiff(intersect(DE_seq_VT$geneName,DE_seq_VF$geneName),DE_seq_validated$geneName)
## complement cascade #######
CC <- c("C1QA","C1QB","C1QC",
"C3","TGFBR2","CX3CR1","TYROBP")
CC%in%Z
CC%in%DE_seq$geneName
CC%in%DE_seq_VT$geneName
CC%in%DE_seq_VF$geneName
## load required packages ##################
library(limma)
library(ruv)
library(EDASeq)
## micro-array data #######################
load("../Data/useExp.rda")
load("../Data/infoExp.rda")
## Array Neuron Levels Plot ###########################
load("../Data/Astro_array.rda")
barplot(height=1-as.numeric(Astro_array[1,-1]),
names.arg=Samples_array,
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
plotPCA(as.matrix(useExp),isLog=TRUE)
## load required packages ##################
library(limma)
library(ruv)
library(EDASeq)
## micro-array data #######################
load("../Data/useExp.rda")
load("../Data/infoExp.rda")
Samples_Array <-  c("C55F","C1078F","C1078T","C1541T","C1571F","C1571T","R1815F","R1815T","R4516F","R4516T","R4852F","R4852T")
Samples_array <- c("C1-F", "C2-F", "C2-T", "C3-T", "C4-F", "C4-T", "R1-F", "R1-T", "R2-F", "R2-T", "R3-F", "R3-T")
group_array <- c(rep("control", 6), rep("Rett", 6))
regions <-c("F","F","T","T","F","T","F","T","F","T","F","T")
## Array Neuron Levels Plot ###########################
load("../Data/Astro_array.rda")
barplot(height=1-as.numeric(Astro_array[1,-1]),
names.arg=Samples_array,
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
plotPCA(as.matrix(useExp),isLog=TRUE)
head(useExp)
regionOrder <- c(1,2,5,7,9,11,3,4,6,8,10,12)
## load required packages ##################
library(limma)
library(ruv)
library(EDASeq)
## micro-array data #######################
load("../Data/useExp.rda")
load("../Data/infoExp.rda")
regionOrder <- c(1,2,5,7,9,11,3,4,6,8,10,12)
Samples_Array <-  c("C55F","C1078F","C1078T","C1541T","C1571F","C1571T","R1815F","R1815T","R4516F","R4516T","R4852F","R4852T")
Samples_array <- c("C1-F", "C2-F", "C2-T", "C3-T", "C4-F", "C4-T", "R1-F", "R1-T", "R2-F", "R2-T", "R3-F", "R3-T")
group_array <- c(rep("control", 6), rep("Rett", 6))
regions <-c("F","F","T","T","F","T","F","T","F","T","F","T")
Samples_Array <- Samples_Array[regionOrder]
Samples_Array
## load required packages ##################
library(limma)
library(ruv)
library(EDASeq)
## micro-array data #######################
load("../Data/useExp.rda")
load("../Data/infoExp.rda")
regionOrder <- c(1,2,5,7,9,11,3,4,6,8,10,12)
Samples_Array <-  c("C55F","C1078F","C1078T","C1541T","C1571F","C1571T","R1815F","R1815T","R4516F","R4516T","R4852F","R4852T")
Samples_array <- c("C1-F", "C2-F", "C2-T", "C3-T", "C4-F", "C4-T", "R1-F", "R1-T", "R2-F", "R2-T", "R3-F", "R3-T")
group_array <- c(rep("control", 6), rep("Rett", 6))
Samples_Array <- Samples_Array[regionOrder]
Samples_array <- Samples_array[regionOrder]
useExp <- useExp[,regionOrder]
regions <- c(rep("F",6),rep("T",6))
head(useExp)
## Array Neuron Levels Plot ###########################
load("../Data/Astro_array.rda")
barplot(height=1-as.numeric(Astro_array[1,-1]),
names.arg=Samples_array,
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
plotPCA(as.matrix(useExp),isLog=TRUE)
## Array Neuron Levels Plot ###########################
load("../Data/Astro_array.rda")
Astro_array<-Astro_array[,regionOrder]
barplot(height=1-as.numeric(Astro_array[1,-1]),
names.arg=Samples_array,
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
head(Astro_array)
load("../Data/Astro_array.rda")
barplot(height=1-as.numeric(Astro_array[1,-1]),
names.arg=Samples_array,
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
load("../Data/Astro_array.rda")
regionAstro <- Astro_array[1,-1]
regionAstro <- regionAstro[regionOrder]
barplot(height=1-as.numeric(Astro_array[1,-1]),
names.arg=Samples_array,
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
plotPCA(as.matrix(useExp),isLog=TRUE)
## Array Neuron Levels Plot ###########################
load("../Data/Astro_array.rda")
regionAstro <- Astro_array[1,-1]
regionAstro <- regionAstro[regionOrder]
barplot(height=1-as.numeric(regionAstro),
names.arg=Samples_array,
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
plotPCA(as.matrix(useExp),isLog=TRUE)
fit <- eBayes(lmFit(useExp, model.matrix(~group_array)))
fp_array <- topTable(fit, coef=2, number=Inf)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
ctl <- !infoExp$GeneName%in%fp_array$GeneName[1:5000]
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W <- RUVnArray$W
R <- removeBatchEffect(useExp,covariates=W,design=model.matrix(~group_array))
plotPCA(as.matrix(R),isLog=TRUE)
R<-cbind(infoExp,R)
## load required packages ##################
library(limma)
library(ruv)
library(EDASeq)
## micro-array data #######################
load("../Data/useExp.rda")
load("../Data/infoExp.rda")
regionOrder <- c(1,2,5,7,9,11,3,4,6,8,10,12)
Samples_Array <-  c("C55F","C1078F","C1078T","C1541T","C1571F","C1571T","R1815F","R1815T","R4516F","R4516T","R4852F","R4852T")
Samples_array <- c("C1-F", "C2-F", "C2-T", "C3-T", "C4-F", "C4-T", "R1-F", "R1-T", "R2-F", "R2-T", "R3-F", "R3-T")
group_array <- c(rep("control", 6), rep("Rett", 6))
Samples_Array <- Samples_Array[regionOrder]
Samples_array <- Samples_array[regionOrder]
useExp <- useExp[,regionOrder]
regions <- c(rep("F",6),rep("T",6))
head(regions)
regions
head(Samples_Array)
Samples_Array
head(useExp)
## Array Neuron Levels Plot ###########################
load("../Data/Astro_array.rda")
regionAstro <- Astro_array[1,-1]
regionAstro <- regionAstro[regionOrder]
barplot(height=1-as.numeric(regionAstro),
names.arg=Samples_array,
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
plotPCA(as.matrix(useExp),isLog=TRUE)
## RUV2 normalisation with k=2 ##########################
fit <- eBayes(lmFit(useExp, model.matrix(~group_array)))
fp_array <- topTable(fit, coef=2, number=Inf)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
ctl <- !infoExp$GeneName%in%fp_array$GeneName[1:5000]
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W <- RUVnArray$W
R <- removeBatchEffect(useExp,covariates=W,design=model.matrix(~group_array))
plotPCA(as.matrix(R),isLog=TRUE)
R<-cbind(infoExp,R)
## RUV2 normalisation with k=2 ##########################
fit <- eBayes(lmFit(useExp, model.matrix(~regions)))
fp_array <- topTable(fit, coef=2, number=Inf)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
ctl <- !infoExp$GeneName%in%fp_array$GeneName[1:5000]
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W <- RUVnArray$W
R <- removeBatchEffect(useExp,covariates=W,design=model.matrix(~group_array))
plotPCA(as.matrix(R),isLog=TRUE)
R<-cbind(infoExp,R)
rm(list=ls())
## load required packages ##################
library(limma)
library(ruv)
library(EDASeq)
## micro-array data #######################
load("../Data/useExp.rda")
load("../Data/infoExp.rda")
regionOrder <- c(1,2,5,7,9,11,3,4,6,8,10,12)
Samples_Array <-  c("C55F","C1078F","C1078T","C1541T","C1571F","C1571T","R1815F","R1815T","R4516F","R4516T","R4852F","R4852T")
Samples_array <- c("C1-F", "C2-F", "C2-T", "C3-T", "C4-F", "C4-T", "R1-F", "R1-T", "R2-F", "R2-T", "R3-F", "R3-T")
group_array <- c(rep("control", 6), rep("Rett", 6))
Samples_Array <- Samples_Array[regionOrder]
Samples_array <- Samples_array[regionOrder]
useExp <- useExp[,regionOrder]
regions <- c(rep("F",6),rep("T",6))
## Array Neuron Levels Plot ###########################
load("../Data/Astro_array.rda")
regionAstro <- Astro_array[1,-1]
regionAstro <- regionAstro[regionOrder]
barplot(height=1-as.numeric(regionAstro),
names.arg=Samples_array,
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
plotPCA(as.matrix(useExp),isLog=TRUE)
## RUV2 normalisation with k=2 ##########################
fit <- eBayes(lmFit(useExp, model.matrix(~regions)))
fp_array <- topTable(fit, coef=2, number=Inf)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
ctl <- !infoExp$GeneName%in%fp_array$GeneName[1:5000]
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W <- RUVnArray$W
R <- removeBatchEffect(useExp,covariates=W,design=model.matrix(~regions))
plotPCA(as.matrix(R),isLog=TRUE)
R<-cbind(infoExp,R)
design_array <- model.matrix(~W+regions)
fit <- eBayes(lmFit(useExp, design_array))
FDR_array <- topTable(fit, coef=4, number=Inf)
FDR_array <- cbind(infoExp[rownames(FDR_array),], FDR_array[,c(1,2,4,5)])
rownames(FDR_array) <- 1:nrow(FDR_array)
head(FDR_array)
head(useExp)
useExpC <- useExp[,c(1,2,3,7,8,9)]
groupC <- c(rep("F", 3), rep("T", 3))
fit <- eBayes(lmFit(useExpC, model.matrix(~groupC)))
fp_array <- topTable(fit, coef=2, number=Inf)
head(fp_array)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
ctlF <- !infoExp$GeneName%in%fp_array$GeneName[1:5000]
ctlC <- !infoExp$GeneName%in%fp_array$GeneName[1:5000]
RUVnArray <- RUV2(Y=t(useExpC), X=t(t(c(rep(0,3), rep(1,3)))), ctl=ctlC, k=2)
WC <- RUVnArray$W
RC <- removeBatchEffect(useExpC,covariates=WC,design=model.matrix(~groupC))
plotPCA(as.matrix(RC),isLog=TRUE)
RC<-cbind(infoExp,RC)
design_array <- model.matrix(~WC+groupC)
fit <- eBayes(lmFit(useExpC, design_array))
FDR_C <- topTable(fit, coef=4, number=Inf)
FDR_C <- cbind(infoExp[rownames(FDR_C),], FDR_C[,c(1,2,4,5)])
rownames(FDR_C) <- 1:nrow(FDR_C)
head(FDR_C)
nrow(FDR_C[FDR_C$adj.P.Val<0.05,])
useExpC <- useExp[,c(1,2,3,7,8,9)]
groupC <- c(rep("F", 3), rep("T", 3))
plotPCA(as.matrix(useExpC),isLog=TRUE)
rm(list=ls())
## load required packages ##################
library(limma)
library(ruv)
library(EDASeq)
## micro-array data #######################
load("../Data/useExp.rda")
load("../Data/infoExp.rda")
regionOrder <- c(1,2,5,7,9,11,3,4,6,8,10,12)
Samples_Array <-  c("C55F","C1078F","C1078T","C1541T","C1571F","C1571T","R1815F","R1815T","R4516F","R4516T","R4852F","R4852T")
Samples_array <- c("C1-F", "C2-F", "C2-T", "C3-T", "C4-F", "C4-T", "R1-F", "R1-T", "R2-F", "R2-T", "R3-F", "R3-T")
group_array <- c(rep("control", 6), rep("Rett", 6))
Samples_Array <- Samples_Array[regionOrder]
Samples_array <- Samples_array[regionOrder]
useExp <- useExp[,regionOrder]
regions <- c(rep("F",6),rep("T",6))
## Array Neuron Levels Plot ###########################
load("../Data/Astro_array.rda")
regionAstro <- Astro_array[1,-1]
regionAstro <- regionAstro[regionOrder]
barplot(height=1-as.numeric(regionAstro),
names.arg=Samples_array,
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
plotPCA(as.matrix(useExp),isLog=TRUE)
## RUV2 normalisation with k=2 ##########################
fit <- eBayes(lmFit(useExp, model.matrix(~regions)))
fp_array <- topTable(fit, coef=2, number=Inf)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
ctl <- !infoExp$GeneName%in%fp_array$GeneName[1:5000]
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W <- RUVnArray$W
R <- removeBatchEffect(useExp,covariates=W,design=model.matrix(~regions))
plotPCA(as.matrix(R),isLog=TRUE)
R<-cbind(infoExp,R)
## Frontal vs Temporal #################
design_array <- model.matrix(~W+regions)
fit <- eBayes(lmFit(useExp, design_array))
FDR_array <- topTable(fit, coef=4, number=Inf)
FDR_array <- cbind(infoExp[rownames(FDR_array),], FDR_array[,c(1,2,4,5)])
rownames(FDR_array) <- 1:nrow(FDR_array)
head(FDR_array)
useExpC <- useExp[,c(1,2,3,7,8,9)]
groupC <- c(rep("F", 3), rep("T", 3))
plotPCA(as.matrix(useExpC),isLog=TRUE)
fit <- eBayes(lmFit(useExpC, model.matrix(~groupC)))
fp_array <- topTable(fit, coef=2, number=Inf)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
ctlC <- !infoExp$GeneName%in%fp_array$GeneName[1:5000]
RUVnArray <- RUV2(Y=t(useExpC), X=t(t(c(rep(0,3), rep(1,3)))), ctl=ctlC, k=2)
WC <- RUVnArray$W
RC <- removeBatchEffect(useExpC,covariates=WC,design=model.matrix(~groupC))
plotPCA(as.matrix(RC),isLog=TRUE)
RC<-cbind(infoExp,RC)
design_array <- model.matrix(~WC+groupC)
fit <- eBayes(lmFit(useExpC, design_array))
FDR_C <- topTable(fit, coef=4, number=Inf)
FDR_C <- cbind(infoExp[rownames(FDR_C),], FDR_C[,c(1,2,4,5)])
rownames(FDR_C) <- 1:nrow(FDR_C)
head(FDR_C)
head(useExpC)
head(useExp)
## load required packages ##################
library(limma)
library(ruv)
library(EDASeq)
## micro-array data #######################
load("../Data/useExp.rda")
load("../Data/infoExp.rda")
regionOrder <- c(1,2,5,7,9,11,3,4,6,8,10,12)
Samples_Array <-  c("C55F","C1078F","C1078T","C1541T","C1571F","C1571T","R1815F","R1815T","R4516F","R4516T","R4852F","R4852T")
Samples_array <- c("C1-F", "C2-F", "C2-T", "C3-T", "C4-F", "C4-T", "R1-F", "R1-T", "R2-F", "R2-T", "R3-F", "R3-T")
group_array <- c(rep("control", 6), rep("Rett", 6))
Samples_Array <- Samples_Array[regionOrder]
Samples_array <- Samples_array[regionOrder]
useExp <- useExp[,regionOrder]
regions <- c(rep("F",6),rep("T",6))
## Array Neuron Levels Plot ###########################
load("../Data/Astro_array.rda")
regionAstro <- Astro_array[1,-1]
regionAstro <- regionAstro[regionOrder]
barplot(height=1-as.numeric(regionAstro),
names.arg=Samples_array,
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
plotPCA(as.matrix(useExp),isLog=TRUE)
useExpC <- useExp[,c(1,2,3,7,8,9)]
groupC <- c(rep("F", 3), rep("T", 3))
plotPCA(as.matrix(useExpC),isLog=TRUE)
fit <- eBayes(lmFit(useExpC, model.matrix(~groupC)))
head(fit)
fp_array <- topTable(fit, coef=2, number=Inf)
head(fp_array)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
ctlC <- !infoExp$GeneName%in%fp_array$GeneName[1:5000]
RUVnArray <- RUV2(Y=t(useExpC), X=t(t(c(rep(0,3), rep(1,3)))), ctl=ctlC, k=2)
WC <- RUVnArray$W
RC <- removeBatchEffect(useExpC,covariates=WC,design=model.matrix(~groupC))
head(RC)
plotPCA(as.matrix(RC),isLog=TRUE)
RC<-cbind(infoExp,RC)
design_array <- model.matrix(~WC+groupC)
fit <- eBayes(lmFit(useExpC, design_array))
FDR_C <- topTable(fit, coef=4, number=Inf)
FDR_C <- cbind(infoExp[rownames(FDR_C),], FDR_C[,c(1,2,4,5)])
rownames(FDR_C) <- 1:nrow(FDR_C)
head(FDR_C)
## load required packages ##################
library(limma)
library(ruv)
library(EDASeq)
## micro-array data #######################
load("../Data/useExp.rda")
load("../Data/infoExp.rda")
regionOrder <- c(1,2,5,7,9,11,3,4,6,8,10,12)
Samples_Array <-  c("C55F","C1078F","C1078T","C1541T","C1571F","C1571T","R1815F","R1815T","R4516F","R4516T","R4852F","R4852T")
Samples_array <- c("C1-F", "C2-F", "C2-T", "C3-T", "C4-F", "C4-T", "R1-F", "R1-T", "R2-F", "R2-T", "R3-F", "R3-T")
group_array <- c(rep("control", 6), rep("Rett", 6))
Samples_Array <- Samples_Array[regionOrder]
Samples_array <- Samples_array[regionOrder]
useExp <- useExp[,regionOrder]
regions <- c(rep("F",6),rep("T",6))
## Array Neuron Levels Plot ###########################
load("../Data/Astro_array.rda")
regionAstro <- Astro_array[1,-1]
regionAstro <- regionAstro[regionOrder]
barplot(height=1-as.numeric(regionAstro),
names.arg=Samples_array,
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
plotPCA(as.matrix(useExp),isLog=TRUE)
rm(list=ls())
## load required packages ##################
library(limma)
library(ruv)
library(EDASeq)
## micro-array data #######################
load("../Data/useExp.rda")
load("../Data/infoExp.rda")
regionOrder <- c(1,2,5,7,9,11,3,4,6,8,10,12)
Samples_Array <-  c("C55F","C1078F","C1078T","C1541T","C1571F","C1571T","R1815F","R1815T","R4516F","R4516T","R4852F","R4852T")
Samples_array <- c("C1-F", "C2-F", "C2-T", "C3-T", "C4-F", "C4-T", "R1-F", "R1-T", "R2-F", "R2-T", "R3-F", "R3-T")
group_array <- c(rep("control", 6), rep("Rett", 6))
Samples_Array <- Samples_Array[regionOrder]
Samples_array <- Samples_array[regionOrder]
useExp <- useExp[,regionOrder]
regions <- c(rep("F",6),rep("T",6))
## Array Neuron Levels Plot ###########################
load("../Data/Astro_array.rda")
regionAstro <- Astro_array[1,-1]
regionAstro <- regionAstro[regionOrder]
barplot(height=1-as.numeric(regionAstro),
names.arg=Samples_array,
ylab = "Proportion of neurons",
ylim=c(0.48,0.52), col=c(rep("blue", 6), rep("red", 6)),
xpd=FALSE)
abline(h=0.5, col="grey")
plotPCA(as.matrix(useExp),isLog=TRUE)
fit <- eBayes(lmFit(useExp, model.matrix(~regions)))
fp_array <- topTable(fit, coef=2, number=Inf)
fp_array <- cbind(infoExp[rownames(fp_array),], fp_array[,c(1,2,4,5)])
ctl <- !infoExp$GeneName%in%fp_array$GeneName[1:5000]
RUVnArray <- RUV2(Y=t(useExp), X=t(t(c(rep(0,6), rep(1,6)))), ctl=ctl, k=2)
W <- RUVnArray$W
R <- removeBatchEffect(useExp,covariates=W,design=model.matrix(~regions))
plotPCA(as.matrix(R),isLog=TRUE)
